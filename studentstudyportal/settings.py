"""
Django settings for studentstudyportal project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import django_heroku
import os
import environ


from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
#print("BASE_DIR: ", BASE_DIR)
# BASE_DIR:  C: \Users\satwa\Desktop\React_Django\My github\Online_Projects\dJango_Code_Dashboard\src

BASE_DIRR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
#print("BASE_DIRR: ", BASE_DIRR)
# BASE_DIRR:  C: \Users\satwa\Desktop\React_Django\My github\Online_Projects\dJango_Code_Dashboard\src
env = environ.Env(SECRET_KEY=str,)
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECURITY WARNING: don't run with debug turned on in production!

# SECRET_KEY = 'django-insecure-x&ak@(!vbmv1_$p1feb0_k*m!c-9z&!(6zefx9#qr6^g41&i@^'
# DEBUG = True
# ALLOWED_HOSTS = ['*']


SECRET_KEY = env('DJANGO_SECRET_KEY')
DEBUG = env('DJANGO_DEBUG')
ALLOWED_HOSTS = [env('DJANGO_ALLOWED_HOSTS')]


#DEBUG = (os.environ.get('DEBUG_VALUE') == 'False')
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'dashboard',
    'crispy_forms',
    'ckeditor',
    'ckeditor_uploader',
    'admin_honeypot',
    'django.contrib.humanize',  # date format in Code detail page
    'storages',


]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',


]

ROOT_URLCONF = 'studentstudyportal.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates'
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'dashboard.context_processors.menu_links',  # menu links
            ],
        },
    },
]

WSGI_APPLICATION = 'studentstudyportal.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': str(os.path.join(BASE_DIR, "db.sqlite3"))
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Los_Angeles'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

LOGIN_REDIRECT_URL = 'home'  # B/C Using class based function to login
LOGIN_URL = 'login'


STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR/'static']

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


CRISPY_TEMPLATE_PACK = "bootstrap4"


####################################
##  CKEDITOR CONFIGURATION ##
####################################

# CKEDITOR_JQUERY_URL = 'https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js'

CKEDITOR_UPLOAD_PATH = 'images/'
CKEDITOR_IMAGE_BACKEND = "pillow"


CKEDITOR_CONFIGS = {

    'default': {

        'extraPlugins': 'codesnippet',

        'toolbar': 'full',

    },

}

# CKEDITOR_CONFIGS = {
#     'default': {
#         'toolbar': 'Custom',
#         'width': 'full',
#         'height': 'full',
#         # 'autoParagraph': False,
#         # 'toolbar_Custom': [
#         #     ['Bold', 'Italic', 'Underline'],
#         #     ['NumberedList', 'BulletedList'],
#         # ],
#     }
# }


# # to avoid <p> show up
# CKEDITOR_CONFIGS = {
#     'default': {
#         'autoParagraph': False
#     },
# }


# CKEDITOR_CONFIGS = {
#     'default': {
#         'toolbar': 'full',
#     },
#     'special': {
#         'toolbar': 'Special',
#         'toolbar_Special': [
#             ['Bold', 'CodeSnippet'],
#         ],
#         'extraPlugins': 'codesnippet',
#     },


#     'portal_config': {
#         # 'skin': 'moono',
#         # 'skin': 'office2013',
#         'toolbar_Basic': [
#             ['Source', '-', 'Bold', 'Italic']
#         ],
#         'toolbar_YourCustomToolbarConfig': [
#             {'name': 'document', 'items': [
#                 'Source', '-', 'Save', 'NewPage', 'Preview', 'Print', '-', 'Templates'
#             ]},
#             {'name': 'clipboard', 'items': [
#                 'Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo'
#             ]},
#             {'name': 'editing', 'items': [
#                 'Find', 'Replace', '-', 'SelectAll']},
#             {'name': 'forms',
#              'items': [
#                  'Form', 'Checkbox', 'Radio', 'TextField', 'Textarea',
#                  'Select', 'Button', 'ImageButton', 'HiddenField'
#              ]},
#             '/',
#             {'name': 'basicstyles',
#              'items': [
#                  'Bold', 'Italic', 'Underline', 'Strike', 'Subscript',
#                  'Superscript', '-', 'RemoveFormat'
#              ]},
#             {'name': 'paragraph',
#              'items': [
#                  'NumberedList', 'BulletedList', '-', 'Outdent', 'Indent',
#                  '-', 'Blockquote', 'CreateDiv', '-', 'JustifyLeft',
#                  'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-',
#                  'BidiLtr', 'BidiRtl', 'Language'
#              ]},
#             {'name': 'links', 'items': ['Link', 'Unlink', 'Anchor']},
#             {'name': 'insert',
#              'items': [
#                  'Image', 'Table', 'HorizontalRule',
#                  'Smiley', 'SpecialChar', 'PageBreak', 'Iframe'
#              ]},
#             '/',
#             {'name': 'styles', 'items': [
#                 'Styles', 'Format', 'Font', 'FontSize']},
#             {'name': 'colors', 'items': ['TextColor', 'BGColor']},
#             {'name': 'tools', 'items': ['Maximize', 'ShowBlocks']},
#             {'name': 'about', 'items': ['About']},
#             '/',  # put this to force next toolbar on new line
#             {'name': 'yourcustomtools', 'items': [
#                 # put the name of your editor.ui.addButton here
#                 'Preview',
#                 'Maximize',

#             ]},
#         ],
#         'toolbar': 'YourCustomToolbarConfig',  # put selected toolbar config here
#         # 'toolbarGroups': [{ 'name': 'document', 'groups': [ 'mode', 'document', 'doctools' ] }],
#         # 'height': 291,
#         'width': '100%',
#         # 'filebrowserWindowHeight': 725,
#         # 'filebrowserWindowWidth': 940,
#         # 'toolbarCanCollapse': True,
#         # 'mathJaxLib': '//cdn.mathjax.org/mathjax/2.2-latest/MathJax.js?config=TeX-AMS_HTML',
#         'tabSpaces': 4,
#         'extraPlugins': ','.join([
#             'uploadimage',  # the upload image feature
#             # your extra plugins here
#             'div',
#             'autolink',
#             'autoembed',
#             'embedsemantic',
#             'autogrow',
#             # 'devtools',
#             'widget',
#             'lineutils',
#             'clipboard',
#             'dialog',
#             'dialogui',
#             'elementspath'
#         ]),
#     }
# }

STATIC_ROOT = os.path.join(BASE_DIRR, 'staticfiles')
# collectstatic will make folder statifiles and save all files to the folder
MEDIA_URL = '/images/'
MEDIA_ROOT = os.path.join(BASE_DIRR, 'images')


AWS_ACCESS_KEY_ID = os.environ.get('DJANGO_AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = os.environ.get('DJANGO_AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = os.environ.get('DJANGO_AWS_STORAGE_BUCKET_NAME')

AWS_S3_FILE_OVERWRITE = False
AWS_DEFAULT_ACL = None

DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'


# Heroku local settings had to disable django_heroku.settings throw error while debug mode ==False
django_heroku.settings(locals())


SITE_ID = 1
